<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cryptography on Personae Labs</title>
    <link>https://personaelabs.org/tags/cryptography/</link>
    <description>Recent content in cryptography on Personae Labs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Nov 2022 22:12:03 +0000</lastBuildDate><atom:link href="https://personaelabs.org/tags/cryptography/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Efficient ZK ECDSA (part 1)</title>
      <link>https://personaelabs.org/posts/efficient-ecdsa-1/</link>
      <pubDate>Thu, 10 Nov 2022 22:12:03 +0000</pubDate>
      
      <guid>https://personaelabs.org/posts/efficient-ecdsa-1/</guid>
      <description>This is the first post of a 2 part series on our research improving private ECDSA signature verification, stemming from this ETHResearch post and implemented in this repository. In this post, we motivate our research and review our key insights. In the follow-up, we will provide a full security proof, discuss on-chain extensions, and introduce even faster implementations in proving systems like Halo2 and Nova.
Motivation ECDSA &amp;amp; ring signatures Client-side proving Key insights Take computation out of the SNARK Precomputing point multiples Off-chain verification To keccak or not to keccak Next up Appendix: half client &amp;amp; half server models Motivation ECDSA &amp;amp; ring signatures The Elliptic Curve Digital Signature Algorithm, or ECDSA for short, is a key tool in the identity layer of blockchains like Ethereum and Bitcoin.</description>
    </item>
    
  </channel>
</rss>
